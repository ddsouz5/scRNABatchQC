% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scRNABatchQC.R
\name{Tech_OnescRNAseq}
\alias{Tech_OnescRNAseq}
\title{Process one scRNAseq dataset to generate QC metadata on technical features}
\usage{
Tech_OnescRNAseq(inputfile, sf = 10000, mincounts = 500, mingenes = 200,
  maxmito = 0.2, mtRNA = "^mt-|^MT-",
  rRNA = "^Rp[sl][[:digit:]]|^RP[SL][[:digit:]]")
}
\arguments{
\item{mincounts}{integer; the cutoff of filtering the cell if the total number of counts in the cell less than the mincounts (default:500)}

\item{mingenes}{integer; the cutoff of filtering the cell if the total number of genes detected in the cell less than the mingenes (default: 200)}

\item{maxmito}{float; the cutoff of filtering the cell if the percentage of mtRNA reads in the cell larger than the minmito; (default: 0.2);}

\item{mtRNA}{a character; the pattern of genenames for mitochondrial encoded RNAs ; (default: "^mt-|^MT-", the default is mtRNA genenames in human or mouse); If not human or mouse, input the gene name pattern of mtRNA}

\item{rRNA}{a character; the pattern of genenames for ribosomal proteins; (default: "^Rp[sl][[:digit:]]|^RP[SL][[:digit:]]", the default is ribosomal protein genenames in human or mouse); If not human or mouse, input the gene name pattern of ribosomal proteins}

\item{inputfile;}{the input file name (or a URL starting http://, file://, etc.) of gene-by-cell count matrix, the rowname should be gene symbol; the file should be regular delimited file;  Compressed files ending .gz and .bz2 are supported}

\item{organism;}{the organism of single cell RNAseq datasets; (defeault: mmusculus)}
}
\value{
a SingleCellExperiment object containing metadata for technical features
	                               assays; ShallowSimpleListAssays object containing two sparse matrix: counts and logcounts
                                elementMetadata; A DataFrame containining metadata for each gene, including
                                                 ave.counts: the average counts
                                                 num.cells: the number of cells with the gene detected 
                                colData; A DataFrame containing metadata for each cell, including
                                                 log10_total_counts: the number of counts in each cell in log10 transformed
                                                 log10_total_features: the number of genes detected in each cell in log10 transformed 
                                                 log10_total_counts_Mt: the number of mitochondrial counts in each cell in log10 transformed
                                                 log10_total_counts_rRNA: the number of rRNA counts in each cell in log10 transformed
                                metadata: A list containing other metadata, including
                                                 rawmeta: a list of metadata for genes and cells of raw data before filtering, including
                                                          sf: normalization factor
                                                          ngenes: the number of genes
                                                          ncells: the number of cells
                                                          CellData: a dataframe containing metadata for each cell before filtering, includingtotal_counts,total_features,total_counts_Mt,total_counts_rRNA, pct_counts_rRNA (perentage of rRNA counts), pct_counts_Mt (percentage of mtRNA counts), libsize.drop(cell is filtered by library size), feature.drop (cell is filtered by the number of detected genes), mito.drop (cell is filtered by the mtRNA counts), is.drop (cell is filtered by either of library size, the number of genes or the mtRNA reads)
                                                          GeneData: a list containing the gene filter information (gene.keep, gene is filtered since none of the cells detect theg gene)   
                                                         Cutoff: a list containing the cutoff values (count, gene, mito) for filtering cells
}
\description{
Generate technical metadata for one single cell RNAseq represented by gene-cell count table
}
\examples{
library(scRNABatchQC)
sce<-Tech_OnescRNAseq(inputfile="https://github.com/liuqivandy/scRNABatchQC/raw/master/bioplar1.csv.gz")
plotDensity(list(sce=sce))
names(sce@metadata)
head(sce@colData$log10_total_counts)
}
